mantis {
  metrics {
    # Set to `true` iff your deployment supports metrics collection.
    # We push metrics to a StatsD-compatible agent and we use Datadog for collecting them in one place.
    # We default to `false` here because we do not expect all deployments to support metrics collection.
    # enabled = false

    # The StatsD-compatible agent host.
    # host = "localhost"

    # The StatsD-compatible agent port.
    # port = 8125

    # All metrics sent will be tagged with the environment.
    # Sample values are: `public`, `private`, `production`, `dev`, depending on the use-case.
    # If metrics are `enabled`, this is mandatory and must be set explicitly to a non-null value.
    #
    # environment = null

    # All metrics sent will be tagged with the deployment.
    # Sample values are: `kevm-testnet`, `iele-testnet`, `raft-kevm`, depending on the use-case.
    # If metrics are `enabled`, this is mandatory and must be set explicitly to a non-null value.
    #
    # deployment = null

    # Size of the metrics requests queue.
    # If the queue contains that many outstanding requests to the metrics agent, then
    # subsequent requests are blocked until the queue has room again.
    # queue-size = 1024

    # Iff true, any errors during metrics client operations will be logged.
    # log-errors = true
  }
}
